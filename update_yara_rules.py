import os
import requests
import zipfile
import shutil
import yara

# URL des YARA-Rules Repositories f체r das 'malware'-Verzeichnis
YARA_RULES_URL = "https://github.com/Yara-Rules/rules/archive/refs/heads/master.zip"
RULES_DIR = "scanner/signature_database"
INVALID_FIELDS = ["md5", "sha1", "sha256"]

def download_yara_rules(url, dest):
    response = requests.get(url)
    zip_path = os.path.join(dest, "rules.zip")
    
    with open(zip_path, 'wb') as file:
        file.write(response.content)
    
    with zipfile.ZipFile(zip_path, 'r') as zip_ref:
        zip_ref.extractall(dest)
    
    os.remove(zip_path)

def integrate_yara_rules(src_dir, dest_file):
    with open(dest_file, 'w') as dest:
        malware_dir = os.path.join(src_dir, "rules-master", "malware")
        for root, dirs, files in os.walk(malware_dir):
            for file in files:
                if file.endswith('.yar') or file.endswith('.yara'):
                    rule_path = os.path.join(root, file)
                    with open(rule_path, 'r', encoding='utf-8', errors='ignore') as src:
                        rule_content = src.read()
                        if any(invalid_field in rule_content for invalid_field in INVALID_FIELDS):
                            print(f"Skipping rule {file} due to invalid fields.")
                            continue
                        try:
                            # Testen der Regel auf G체ltigkeit
                            yara.compile(source=rule_content)
                            dest.write(rule_content)
                            dest.write('\n')
                        except yara.SyntaxError as e:
                            print(f"Skipping invalid rule {file}: {e}")

def validate_yara_rules(filepath):
    try:
        rules = yara.compile(filepath=filepath)
        print("YARA rules compiled successfully.")
    except yara.SyntaxError as e:
        print(f"Syntax error in YARA rules: {e}")
    except yara.Error as e:
        print(f"Error compiling YARA rules: {e}")

if __name__ == "__main__":
    # Tempor채res Verzeichnis zum Herunterladen und Entpacken der Regeln
    temp_dir = os.path.join(RULES_DIR, "temp")
    os.makedirs(temp_dir, exist_ok=True)
    
    # Herunterladen und Entpacken der YARA-Regeln
    download_yara_rules(YARA_RULES_URL, temp_dir)
    
    # Integrieren der heruntergeladenen Regeln in eine einzige Datei
    integrated_rules_file = os.path.join(RULES_DIR, "integrated_rules.yar")
    integrate_yara_rules(temp_dir, integrated_rules_file)
    
    # Entfernen des tempor채ren Verzeichnisses
    shutil.rmtree(temp_dir)
    
    # Validieren der integrierten YARA-Regeln
    validate_yara_rules(integrated_rules_file)
